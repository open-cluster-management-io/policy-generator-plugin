apiVersion: policy.open-cluster-management.io/v1
kind: PolicyGenerator
metadata:
  # Required. Used to uniquely identify the configuration file.
  name: ""

# Required if multiple policies are consolidated in a PlacementBinding so that the generator can
# create unique PlacementBinding names using the name given here.
placementBindingDefaults:
  # Set an explicit placement binding name to use rather than rely on the default.
  name: ""

# Required. Any default value listed here can be overridden under an entry in the policies array
# except for "namespace".
policyDefaults:
  # Optional. Array of categories to be used in the policy.open-cluster-management.io/categories
  # annotation. This defaults to ["CM Configuration Management"].
  categories:
    - "CM Configuration Management"
  # Optional. Array of controls to be used in the policy.open-cluster-management.io/controls
  # annotation. This defaults to ["CM-2 Baseline Configuration"].
  controls:
    - "CM-2 Baseline Configuration"
  # Optional. This determines if a single configuration policy should be generated for all the
  # manifests being wrapped in the policy. If set to false, a configuration policy per manifest will
  # be generated. This defaults to true.
  consolidateManifests: true
  # Optional. This is how often a policy should be evaluated when in a particular compliance state.
  # When managed clusters have low CPU resources, the evaluation interval can be increased to
  # to reduce CPU usage on the Kubernetes API.
  evaluationInterval:
    # These are in the format of durations (e.g. "1h25m3s"). These can also be set to "never" to
    # avoid evaluating the policy after it has become a particular compliance state.
    compliant: 30m
    noncompliant: 45s
  # Optional. When the policy references a Kyverno policy manifest, this determines if an additional
  # configuration policy should be generated in order to receive policy violations in Open Cluster
  # Management when the Kyverno policy has been violated. This defaults to true.
  informKyvernoPolicies: true
  # Optional. Overrides complianceType when comparing the manifest's metadata section to objects on
  # the cluster ("musthave",  "mustonlyhave"). Default is unset to not override complianceType for metadata.
  metadataComplianceType: ""
  # Required. The namespace of all the policies.
  namespace: ""
  # Optional. The placement configuration for the policies. This defaults to a placement
  # configuration that matches all clusters.
  placement:
    # To specify a placement rule, specify key:value pair cluster selectors. (See placementRulePath
    # to specify an existing file instead.)
    clusterSelectors: {}
    # To specify a placement, specify key:value pair cluster label selectors. (See placementPath to
    # specify an existing file instead.)
    labelSelector: {}
    # Optional. Specifying a name will consolidate placement rules that contain the same cluster
    # selectors.
    name: ""
    # To reuse an existing placement manifest, specify the path here relative to the
    # kustomization.yaml file. If given, this placement will be used by all policies by default.
    # (See clusterSelectors to generate a new Placement instead.)
    placementPath: ""
    # To reuse an existing placement rule manifest, specify the path here relative to the
    # kustomization.yaml file. If given, this placement rule will be used by all policies by
    # default. (See clusterSelectors to generate a new PlacementRule instead.)
    placementRulePath: ""
  # Optional. The remediation action ("inform" or "enforce") for each configuration policy. This
  # defaults to "inform".
  remediationAction: "inform"
  # Optional. The severity of the policy violation. This defaults to "low".
  severity: "low"
  # Optional. Array of standards to be used in the policy.open-cluster-management.io/standards
  # annotation. This defaults to ["NIST SP 800-53"].
  standards:
    - "NIST SP 800-53"
  # Optional. Array of policy sets that the policy will join. Policy set details can be defined
  # in the policySets section. When a policy is part of a policy set, a placement binding will not be 
  # generated for the policy since one is generated for the set. Set policies[*].generatePlacementWhenInSet 
  # or policyDefaults.generatePlacementWhenInSet to override.
  policySets: []
  # Optional. When a policy is part of a policy set, by default the generator will not generate the placement
  # for this policy since a placement is generated for the policy set. If a placement should still be generated, 
  # set it to "true" so that the policy will be deployed with both policy placement and policy set placement. 
  # This defaults to "false".
  generatePlacementWhenInSet: false

# Required. The list of policies to create along with overrides to either the default values or, if
# set, the values given in policyDefaults.
policies:
    # Required. The name of the policy to create.
  - name: ""
    # Required. The list of Kubernetes resource object manifests to include in the policy.
    manifests:
        # Required. Path to a single file or a flat directory of files relative to the
        # kustomization.yaml file. This path cannot be in a directory outside of the directory with
        # the kustomization.yaml file. Subdirectories within the directory with kustomization.yaml
        # file are allowed.
        # Supported manifests:
        #   1) Non-root policy type manifests such as IamPolicy, CertificatePolicy, and ConfigurationPolicy
        #      that have a "Policy" suffix. These are not modified except for patches and are directly added 
        #      as a Policy's policy-templates entry.
        #   2) For everything else, ConfigurationPolicy objects are generated to wrap these manifests. 
        #      The resulting ConfigurationPolicy is added as a Policy's policy-templates entry.
      - path: ""
        # Optional. (See policy[0].complianceType for description.)
        complianceType: "musthave"
        # Optional. (See policyDefaults.metadataComplianceType for description.)
        metadataComplianceType: ""
         # Optional. (See policyDefaults.evaluationInterval for description.)
        evaluationInterval: {}
        # Optional. A Kustomize patch to apply to the manifest(s) at the path. If there
        # are multiple manifests, the patch requires the apiVersion, kind, metadata.name,
        # and metadata.namespace (if applicable) fields to be set so Kustomize
        # can identify the manifest the patch applies to.
        patches:
            # Optional: Only required when there are multiple manifests in the path.
          - apiVersion: ""
            # Optional: Only required when there are multiple manifests in the path.
            kind: ""
            metadata:
              # Optional: Only required when there are multiple manifests in the path.
              # Optional: Replace metadata.name is only allowed for a single YAML structure manifest.
              name: ""
              # Optional: Only required when there are multiple manifests in the path and it's a
              # manifest to a namespaced resource.
              # Optional: Replace metadata.namespace is only allowed for a single YAML structure manifest.
              namespace: ""
              # An example modification to the manifest
              annotations:
                friends-character: Chandler Bing
    # Optional. (See policyDefaults.categories for description.)
    categories:
      - "CM Configuration Management"
    # Optional. Determines the policy controller behavior when comparing the manifest to objects on
    # the cluster ("musthave",  "mustonlyhave", or "mustnothave"). Defaults to "musthave".
    complianceType: "musthave"
    # Optional. (See policyDefaults.metadataComplianceType for description.)
    metadataComplianceType: ""
    # Optional. (See policyDefaults.controls for description.)
    controls:
      - "CM-2 Baseline Configuration"
    # Optional. (See policyDefaults.disabled for description.)
    disabled: false
    # Optional. (See policyDefaults.evaluationInterval for description.)
    evaluationInterval: {}
    # Optional. (See policyDefaults.informKyvernoPolicies for description.)
    informKyvernoPolicies: true
    # Optional. (See policyDefaults.consolidateManifests for description.)
    consolidateManifests: true
    # Optional. Determines the list of namespaces to check on the cluster for the given manifest. If
    # a namespace is specified in the manifest, the selector is not necessary. This defaults to no
    # selectors.
    namespaceSelector:
      include: []
      exclude: []
    # Optional. (See policyDefaults.placement for description.)
    placement: {}
    # Optional. (See policyDefaults.remediationAction for description.)
    remediationAction: ""
    # Optional. (See policyDefaults.severity for description.)
    severity: "low"
    # Optional. (See policyDefaults.standards for description.)
    standards:
      - "NIST SP 800-53"
    # Optional. (See policyDefaults.policySets for description.)
    policySets: []
    # Optional. (See policyDefaults.generatePlacementWhenInSet for description.)
    generatePlacementWhenInSet: false

# Optional. The list of policy sets to create. To include a policy in a policy set, use 
# policies[*].policySets or policyDefaults.policySets or policySets.policies.
policySets:
    # Required. The name of the policy set to create.
  - name: ""
    # Optional. The description of the policy set to create.
    description: ""
    # Optional. The list of policies to be included in the policy set. If policies[*].policySets or 
    # policyDefaults.policySets is also specified, the list is merged.
    policies: []
    # Optional. The placement configuration for the policy set. This defaults to a placement
    # configuration that matches all clusters.
    placement:
      # To specify a placement rule, specify key:value pair cluster selectors. (See placementRulePath
      # to specify an existing file instead.)
      clusterSelectors: {}
      # To specify a placement, specify key:value pair cluster label selectors. (See placementPath to
      # specify an existing file instead.)
      labelSelector: {}
      # Optional. Specifying a name will consolidate placement rules that contain the same cluster
      # selectors.
      name: ""
      # To reuse an existing placement manifest, specify the path here relative to the
      # kustomization.yaml file. (See clusterSelectors to generate a new Placement instead.)
      placementPath: ""
      # To reuse an existing placement rule manifest, specify the path here relative to the
      # kustomization.yaml file. (See clusterSelectors to generate a new PlacementRule instead.)
      placementRulePath: ""